{"version":3,"sources":["../../../src/parsers/string.ts"],"names":["toString","decodeBytes","encodeBytes","encodeString","buffer","value","bufferValue","Buffer","from","decodeString"],"mappings":"AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,SAAzC;AAGA,OAAO,MAAMC,YAA4B,GAAG,CAACC,MAAD,EAAqBC,KAArB,KAAmD;AAC7F,QAAMC,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmB,MAAnB,CAApB;AAEA,SAAOH,WAAW,CAACE,MAAD,EAASE,WAAT,EAAsB,OAAtB,CAAlB;AACD,CAJM;AAMP,OAAO,MAAMG,YAA4B,GAAG,CAACJ,KAAD,EAAoBD,MAApB,KAAmD;AAC7F,SAAOJ,QAAQ,CAACC,WAAW,CAACI,KAAD,EAAQD,MAAR,EAAgB,QAAhB,CAAZ,CAAf;AACD,CAFM","sourcesContent":["import { toString } from '../utils/buffer';\nimport { decodeBytes, encodeBytes } from './bytes';\nimport { DecodeFunction, EncodeFunction } from './parser';\n\nexport const encodeString: EncodeFunction = (buffer: Uint8Array, value: string): Uint8Array => {\n  const bufferValue = Buffer.from(value, 'utf8');\n\n  return encodeBytes(buffer, bufferValue, 'bytes');\n};\n\nexport const decodeString: DecodeFunction = (value: Uint8Array, buffer: Uint8Array): string => {\n  return toString(decodeBytes(value, buffer, 'string'));\n};\n"],"file":"string.js"}