import { addPadding, concat, toBuffer, toNumber } from '../utils/buffer';
export const encodeBytes = (buffer, value) => {
  const bufferValue = toBuffer(value);
  const paddedSize = Math.ceil(bufferValue.byteLength / 32) * 32;
  return concat(buffer, Buffer.concat([toBuffer(bufferValue.byteLength), addPadding(bufferValue, paddedSize)]));
};
export const decodeBytes = (value, buffer) => {
  const pointer = Number(toNumber(value.subarray(0, 32)));
  const length = toNumber(value.subarray(pointer, pointer + 32));
  return buffer.subarray(32, 32 + Number(length));
};
//# sourceMappingURL=bytes.js.map