"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toHex = exports.toNumber = exports.toString = exports.toBuffer = exports.addPadding = exports.concatMultiple = exports.concat = void 0;
const BUFFER_WIDTH = 32;

const concat = (target, value, position) => {
  return new Uint8Array([...target.subarray(0, position !== null && position !== void 0 ? position : target.length), ...value, ...target.subarray(position !== null && position !== void 0 ? position : target.length)]);
};

exports.concat = concat;

const concatMultiple = buffers => {
  return buffers.reduce((target, buffer) => {
    const array = new Uint8Array(target.length + buffer.length);
    array.set(target, 0);
    array.set(buffer, target.length);
    return array;
  }, new Uint8Array(0));
};

exports.concatMultiple = concatMultiple;

const addPadding = (buffer, length = 32) => {
  const padding = Buffer.alloc(Math.max(length - buffer.length, 0), 0);
  return concat(buffer, padding);
};

exports.addPadding = addPadding;

const toBuffer = value => {
  if (Buffer.isBuffer(value) || value instanceof Uint8Array) {
    return value;
  }

  if (typeof value === 'string') {
    const stringValue = value.startsWith('0x') ? value.substring(2) : value;
    return Buffer.from(stringValue, 'hex');
  }

  const hex = value.toString(16);
  return Buffer.from(hex.padStart(BUFFER_WIDTH * 2, '0').slice(0, BUFFER_WIDTH * 2), 'hex');
};

exports.toBuffer = toBuffer;

const toString = value => {
  if (typeof window !== 'undefined' && window.TextDecoder) {
    return new TextDecoder('utf-8').decode(value);
  }

  return new (require('util').TextDecoder)('utf-8').decode(value);
};

exports.toString = toString;

const toNumber = buffer => {
  const hex = toHex(buffer);

  if (hex.length === 0) {
    return BigInt(0);
  }

  return BigInt(`0x${hex}`);
};

exports.toNumber = toNumber;

const numberToHex = value => {
  return ('0' + value.toString(16)).slice(-2);
};

const toHex = buffer => {
  return Array.from(buffer).map(numberToHex).join('');
};

exports.toHex = toHex;
//# sourceMappingURL=buffer.js.map