{"version":3,"sources":["../../../src/utils/twos-complement.ts"],"names":["fromTwosComplement","buffer","bufferValue","value","byte","BigInt","asIntN","length","toTwosComplement","Uint8Array","i","Number","asUintN","reverse"],"mappings":";;;;;;;AAAA;;AAEO,MAAMA,kBAAkB,GAAIC,MAAD,IAAyC;AACzE,QAAMC,WAAW,GAAG,sBAASD,MAAT,CAApB;AAEA,MAAIE,KAAK,GAAG,EAAZ;;AACA,OAAK,MAAMC,IAAX,IAAmBF,WAAnB,EAAgC;AAC9BC,IAAAA,KAAK,GAAG,CAACA,KAAK,IAAI,EAAV,IAAgBE,MAAM,CAACD,IAAD,CAA9B;AACD;;AAED,SAAOC,MAAM,CAACC,MAAP,CAAcJ,WAAW,CAACK,MAAZ,GAAqB,CAAnC,EAAsCJ,KAAtC,CAAP;AACD,CATM;;;;AAWA,MAAMK,gBAAgB,GAAG,CAACL,KAAD,EAAgBI,MAAhB,KAA+C;AAC7E,QAAMN,MAAM,GAAG,IAAIQ,UAAJ,CAAeF,MAAf,CAAf;;AACA,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,MAAM,CAACM,MAA3B,EAAmCG,CAAC,EAApC,EAAwC;AACtCT,IAAAA,MAAM,CAACS,CAAD,CAAN,GAAYC,MAAM,CAACN,MAAM,CAACO,OAAP,CAAe,CAAf,EAAkBT,KAAlB,CAAD,CAAlB;AACAA,IAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;AACD;;AAED,SAAOF,MAAM,CAACY,OAAP,EAAP;AACD,CARM","sourcesContent":["import { toBuffer } from './buffer';\n\nexport const fromTwosComplement = (buffer: string | Uint8Array): bigint => {\n  const bufferValue = toBuffer(buffer);\n\n  let value = 0n;\n  for (const byte of bufferValue) {\n    value = (value << 8n) + BigInt(byte);\n  }\n\n  return BigInt.asIntN(bufferValue.length * 8, value);\n};\n\nexport const toTwosComplement = (value: bigint, length: number): Uint8Array => {\n  const buffer = new Uint8Array(length);\n  for (let i = 0; i < buffer.length; i++) {\n    buffer[i] = Number(BigInt.asUintN(8, value));\n    value = value >> 8n;\n  }\n\n  return buffer.reverse();\n};\n"],"file":"twos-complement.js"}