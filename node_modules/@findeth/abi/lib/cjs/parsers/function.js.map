{"version":3,"sources":["../../../src/parsers/function.ts"],"names":["encodeFunction","buffer","value","decodeFunction"],"mappings":";;;;;;;AAAA;;AAUO,MAAMA,cAA8B,GAAG,CAACC,MAAD,EAAqBC,KAArB,KAAgE;AAC5G,SAAO,kCAAiBD,MAAjB,EAAyBC,KAAzB,EAAgC,SAAhC,CAAP;AACD,CAFM;;;;AAWA,MAAMC,cAA8B,GAAG,CAACD,KAAD,EAAoBD,MAApB,KAAuD;AACnG,SAAO,kCAAiBC,KAAjB,EAAwBD,MAAxB,EAAgC,SAAhC,CAAP;AACD,CAFM","sourcesContent":["import { decodeFixedBytes, encodeFixedBytes } from './fixed-bytes';\nimport { DecodeFunction, EncodeFunction } from './parser';\n\n/**\n * Encode a function type to a Buffer. This is equivalent to the `bytes24` type.\n *\n * @param {Uint8Array} buffer\n * @param {string | Uint8Array} value\n * @return {Uint8Array}\n */\nexport const encodeFunction: EncodeFunction = (buffer: Uint8Array, value: string | Uint8Array): Uint8Array => {\n  return encodeFixedBytes(buffer, value, 'bytes24');\n};\n\n/**\n * Decode a function type from a Buffer. This is equivalent to the `bytes24` type.\n *\n * @param {Uint8Array} buffer\n * @param {string | Uint8Array} value\n * @return {Uint8Array}\n */\nexport const decodeFunction: DecodeFunction = (value: Uint8Array, buffer: Uint8Array): Uint8Array => {\n  return decodeFixedBytes(value, buffer, 'bytes24');\n};\n"],"file":"function.js"}