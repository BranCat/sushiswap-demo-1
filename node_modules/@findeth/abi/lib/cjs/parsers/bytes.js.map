{"version":3,"sources":["../../../src/parsers/bytes.ts"],"names":["encodeBytes","buffer","value","bufferValue","paddedSize","Math","ceil","byteLength","Buffer","concat","decodeBytes","pointer","Number","subarray","length"],"mappings":";;;;;;;AAAA;;AAGO,MAAMA,WAA2B,GAAG,CAACC,MAAD,EAAqBC,KAArB,KAAgE;AACzG,QAAMC,WAAW,GAAG,sBAASD,KAAT,CAApB;AACA,QAAME,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUH,WAAW,CAACI,UAAZ,GAAyB,EAAnC,IAAyC,EAA5D;AAEA,SAAO,oBAAON,MAAP,EAAeO,MAAM,CAACC,MAAP,CAAc,CAAC,sBAASN,WAAW,CAACI,UAArB,CAAD,EAAmC,wBAAWJ,WAAX,EAAwBC,UAAxB,CAAnC,CAAd,CAAf,CAAP;AACD,CALM;;;;AAQA,MAAMM,WAA2B,GAAG,CAACR,KAAD,EAAoBD,MAApB,KAAuD;AAChG,QAAMU,OAAO,GAAGC,MAAM,CAAC,sBAASV,KAAK,CAACW,QAAN,CAAe,CAAf,EAAkB,EAAlB,CAAT,CAAD,CAAtB;AACA,QAAMC,MAAM,GAAG,sBAASZ,KAAK,CAACW,QAAN,CAAeF,OAAf,EAAwBA,OAAO,GAAG,EAAlC,CAAT,CAAf;AAEA,SAAOV,MAAM,CAACY,QAAP,CAAgB,EAAhB,EAAoB,KAAKD,MAAM,CAACE,MAAD,CAA/B,CAAP;AACD,CALM","sourcesContent":["import { addPadding, concat, toBuffer, toNumber } from '../utils/buffer';\nimport { DecodeFunction, EncodeFunction } from './parser';\n\nexport const encodeBytes: EncodeFunction = (buffer: Uint8Array, value: string | Uint8Array): Uint8Array => {\n  const bufferValue = toBuffer(value);\n  const paddedSize = Math.ceil(bufferValue.byteLength / 32) * 32;\n\n  return concat(buffer, Buffer.concat([toBuffer(bufferValue.byteLength), addPadding(bufferValue, paddedSize)]));\n};\n\n// TODO: This may not work properly yet\nexport const decodeBytes: DecodeFunction = (value: Uint8Array, buffer: Uint8Array): Uint8Array => {\n  const pointer = Number(toNumber(value.subarray(0, 32)));\n  const length = toNumber(value.subarray(pointer, pointer + 32));\n\n  return buffer.subarray(32, 32 + Number(length));\n};\n"],"file":"bytes.js"}